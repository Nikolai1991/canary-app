---
apiVersion: v1
kind: Namespace
metadata:
  name: default
  labels:
    istio-injection: enabled
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: canary-app
  labels:
    app: canary-app
spec:
  strategy:
    # which strategy to use (blueGreen, canary..)
    canary:
    # this part represents all the steps during an update.
      analysis:
        templates:
        - templateName: success-rate
        startingStep: 2
        args:
        - name: service-name
          value: canary-app-v2.default.svc.cluster.local
      steps:
    # we send at the beginning of the new release 20% of the traffic to the canary release.
    # To do that, Argo CD will update the weight of Istio's VirtualService.
      - setWeight: 20
    # Then we wait 1min to generate some traffic on the canary release.
      - pause:
          duration: "1m"
    # After 1 min, we send 50% of the traffic to the canary release.
      - setWeight: 50
    # Then we wait again 2min
      - pause:
          duration: "2m"
    # At the end if no more step is present, 
    # Argo will send 100% of the traffic to the canary release.
      canaryService: canary-app-v2 # represents our canary clusterIP service.
      stableService: canary-app-v1 # represents our main clusterIP service.
      trafficRouting:
        istio:
           virtualService: 
            name: canary-app-virtual-service
            routes:
            - canary-app-route # At least one route is required
  replicas: 4
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: canary-app-v1
      version: blue
  template:
    metadata:
      labels:
        app: canary-app-v1
        version: blue
    spec:
      containers:
      - name: canary-app-v1
        image: argoproj/rollouts-demo:blue # blue (stable) / orange (new canary version) / bad-green  (broken image)
        imagePullPolicy: Always
        ports:
        - name: web
          containerPort: 8080
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "140m"
---
apiVersion: v1
kind: Service
metadata:
  name: canary-app-v1
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: canary-app-v1
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: canary-app-v2
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: canary-app-v2
  type: ClusterIP
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: success-rate
spec:
  args:
  - name: service-name
  metrics:
  - name: success-rate
    successCondition: result[0] >= 0.95
    interval: 30s
    failureLimit: 1
    provider:
      prometheus:
        address: http://prometheus.istio-system.svc.cluster.local:9090
        query: |
          sum(irate(
            istio_requests_total{reporter="source",destination_service=~"{{args.service-name}}",response_code!~"5.*"}[1m]
          )) / 
          sum(irate(
            istio_requests_total{reporter="source",destination_service=~"{{args.service-name}}"}[1m]
          ))